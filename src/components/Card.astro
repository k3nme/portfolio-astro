---
import { Image } from 'astro:assets'
import type { ImageMetadata } from 'astro'
import { cn } from '@/utils'
import Button from './Button.astro'

const {
	as: Tag = 'div',
	class: className,
	href,
	heading,
	subheading,
	date,
	imagePath,
	technologies,
	domains,
	altText,
	imageClass,
	isCurrentPosition = false
} = Astro.props
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}')

if (imagePath) {
	if (!images[imagePath])
		throw new Error(`"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`)
}
---

<Tag
	class={cn(
		className,
		'relative rounded-2xl border border-border bg-primary-foreground px-5 py-3',
		href && 'transition-all hover:border-foreground/25'
	)}
	href={href}
>
	{ imagePath && (
		<Image
			src={images[imagePath]()}
			alt={altText}
			class={cn('mb-3 md:absolute md:mb-0 rounded-xl', imageClass)}
			loading='eager'
		/>
	)}
	
	<div class="flex flex-col gap-y-4">
		<div class="flex flex-col gap-y-1.5">
			{isCurrentPosition && (
				<h1 class="text-base mb-2 font-medium">{heading}</h1>
			)}
			{!isCurrentPosition && (
				<h1 class="text-base mb-2 text-muted-foreground">{heading}</h1>
			)}
			<h2 class="text-muted-foreground mb-2">{subheading}</h2>
			<p class="text-sm text-muted-foreground">{date}</p>
			
			{technologies && (
				<div class="flex flex-col my-3 rounded-lg">
					<div class="flex items-center gap-2 mb-2">
						<span class="text-muted-foreground">Technologies</span>
					</div>
					<div class="flex flex-wrap gap-1">
						{technologies.split(',').map((tech: string) => (
							<Button 
								as="button" 
								title={tech} 
								class="p-2 rounded-lg text-muted-foreground"
							/>
						))}
					</div>
				</div>
			)}
			
			{domains && (
				<div class="flex flex-col my-3 rounded-lg">
					<div class="flex items-center gap-2 mb-2">
						<span class="text-muted-foreground">Domains</span>
					</div>
					<div class="flex flex-wrap gap-1">
						{domains.split(',').map((domain: string) => (
							<Button 
								as="button" 
								title={domain} 
								class="rounded-lg text-muted-foreground"
							/>
						))}
					</div>
				</div>
			)}
		</div>
		<slot />
	</div>
</Tag>
